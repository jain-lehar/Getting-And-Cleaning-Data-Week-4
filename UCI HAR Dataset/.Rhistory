132.86-127.44 +c(-1,1)*qt(.975,mydf * sqrt(15.34^2/8+18.23^2/21)
)
132.86-127.44 +c(-1,1)*qt(.975,mydf) * sqrt(15.34^2/8+18.23^2/21)
swirl()
swirl()
swirl()
swirl()
10/10
swirl()
?pt
pt(2.5,15,lower.tail = FALSE)
qnorm(.95)
1100 + c(-1,1)*qt(.975,8)*30/sqrt(9)
2/qt(.975,8)
(2/qt(.975,8))*3
head(swiss)
lm(Fertility ~.,data=swiss)
summary(lm(Fertility ~.,data=swiss)
)
summary(lm(Fertility ~.,data=swiss))$coef
summary(lm(Fertility ~Agriculture,data=swiss))$coef
n <- 100
x2<-1:n
x1 <- 0.1*x2+runif(n,-.1,.1)
y <- -x1+x2+rnorm(n,sd=.01)
x2
x1
plot(x1)
summary(lm(y~x1))$corf
summary(lm(y~x1))$coef
summary(lm(y~x1+x2))$coef
g <- ggplot(dat,aes(y=y,x=x1,col=x2))
library(ggplot2)
g <- ggplot(dat,aes(y=y,x=x1,col=x2))
dat <- data.frame(y=y1,x1=x1,x2=x2,ey=resid(lmy~x2),ex1 = resid(lm(x1~x2)))
dat <- data.frame(y=y,x1=x1,x2=x2,ey=resid(lm(y~x2)),ex1 = resid(lm(x1~x2)))
g <- ggplot(dat,aes(y=y,x=x1,col=x2))
g < g+geom_point(color="grey50",size=5)+geom_smooth(method = lm,se=FALSE,color="black")+geom_point(size=4)
g < g+geom_point(color="grey50",size=5)+geom_smooth(se=FALSE,color="black")+geom_point(size=4)
g
g <- g+geom_point(color="grey50",size=5)+geom_smooth(method = lm,se=FALSE,color="black")+geom_point(size=4)
g
require(datasets)
data("InsectSprays")
require(stats)
require(ggplot2)
g <- ggplot(data=InsectSprays,aes(y=count,x=spray,fill = spray))
g <- g+ geom_violin(color="black",size=2)
g <- g+xlab("Type of spray") + ylab("Insect Count")
g
?InsectSprays
g
head(InsectSprays)
sapply(InsectSprays,class)
unique(InsectSprays$spray)
dim(InsectSprays)
summary(lm(count~spray,InsectSprays))$coef
sumary(lm(count~I(1*(spray=='B'))+I(1*(spray=='C'))+I(1*(spray=='D'))+I(1*(spray=='E'))+I(1*(spray=='F'))))
summary(lm(count~I(1*(spray=='B'))+I(1*(spray=='C'))+I(1*(spray=='D'))+I(1*(spray=='E'))+I(1*(spray=='F'))))
summary(lm(count~I(1*(spray=='B'))+I(1*(spray=='C'))+I(1*(spray=='D'))+I(1*(spray=='E'))+I(1*(spray=='F')),data = InsectSprays))$coef
summary(lm(count~I(1*(spray=='B'))+I(1*(spray=='C'))+I(1*(spray=='D'))+I(1*(spray=='E'))+I(1*(spray=='F'))+I(1*(spray=='A')),data = InsectSprays))$coef
summary(lm(count~spray-1,InsectSprays))$coef
data(swiss)
head(swiss)
hist(swiss$Catholic)
library(dplyr)
siss<-mutate(swiss,CatholicBin = 1*(Catholic>50))
head(swiss)
swiss<-mutate(swiss,CatholicBin = 1*(Catholic>50))
head(swiss)
g = ggplot(swiss,aes(x=Agriculture,y=Fertility,colour=factor(CatholicBin)))
g<-g+geom_point(size=6,colour="black")+geom_point(size=4)
g<-g+xlab("% in Agriculture")+ylab("Fertility")
g
fit <- lm(Fertility~Agriculture,swiss)
g1 <- g
g1<-g1+geom_abline(intercept = coef(fit)[1],slope = coef(fit)[2],size=2)
g1
summary(fit)$coef
fit <- lm(Fertility~Agriculture+factor(CatholicBin),swiss)
g1 <- g
g1<-g1+geom_abline(intercept = coef(fit)[1],slope = coef(fit)[2],size=2)
g1<-g1+geom_abline(intercept = coef(fit)[1]+coef(fit)[3],slope = coef(fit)[2],size=2)
g1
summary(fit)$coef
fit <- lm(Fertility~Agriculture*factor(CatholicBin),swiss)
summary(fit)$coef
g1<-g
g1<-g1+abline(intercept=coef(fit)[1],slope=coef(fit)[2],size=2)
g1<-g1+geom_abline(intercept=coef(fit)[1],slope=coef(fit)[2],size=2)
g1<-g1+geom_abline(intercept = coef(fit)[1]+coef(fit)[3],slope = coef(fit)[2]+coef(fit)[4],size=2)
g1
data(swiss)
par(mfrow=c(2,2))
fit <- lm(Fertility~.,swiss)
plot(fit)
?influence.measures
n<-100
x<-c(10,rnorm(n))
y<-(10,c(rnorm(n)))
y<-c(10,c(rnorm(n)))
plot(x,y,frame=FALSE,cex=2,pch=21,bg="lightblue",col="black")
abline(lm(y~x))
fit<-lm(y~x)
round(dfbetas(fit)[1:10,2],3)
round(hatvalues(fit)[1:10],3)
n <- 100
noism<-1000
x1<-rnorm(n)
x2<-rnorm(n)
x3<-rnorm(n)
betas<-sapply(1:noism,function(i){)
betas<-sapply(1:noism,function(i){
y<-x1+rnorm(n,sd=.3)
c(coef(lm(y~x1))[2],coef(lm(y~x1+x2))[2],coef(lm(y~x1+x2+x3))[2])})
round(apply(betas,1,sd),5)
x2<- x1/sqrt(2)+rnorm(n)/sqrt(2)
x3<-x1*.95+rnorm(n)*sqrt(1-.95^2)
betas<-sapply(1:noism,function(i){
y<-x1+rnorm(n,sd=.3)
c(coef(lm(y~x1))[2],coef(lm(y~x1+x2))[2],coef(lm(y~x1+x2+x3))[2])})
round(apply(betas,1,sd),5)
library(swirl)
swirl()
dim(InsectSprays)[1]
6
dim(InsectSprays)
head(InsectSprays,n=15)
sA
summary(InsectSprays[,2])
sapply(InsectSprays,class)
fit<-lm(count~spray,data=InsectSprays)
summary(fit)[coef]
summary(fit)$coef
est<-summary(fit)$coef[,1]
mean(sA)
mean(sBA)
mean(sB)
nfit<-lm(count~spray-1,data=InsectSprays)
summary(nfit)$coef
spray2r<-elevel(InsectSprays$spray,"C")
spray2r<-relevel(InsectSprays$spray,"C")
spray2r<-relevel(InsectSprays$spray,\"C\")
spray2<-relevel(InsectSprays$spray,"C")
fit2<-lm(InsectSprays$count~spray2)
summary(fit2)$coef
mean(sC)
fit$coef[2]-fit$coef[3]/1.6011
(fit$coef[2]-fit$coef[3])/1.6011
swirl()
swirl()
library(swirl)
swirl()
dim(hunger)
948
names(hunger)
fit<-lm(Numeric~Year,hunger)
summary(fit)$coef
lmF<-lm(Numeric~Year,hunger[hunger$Sex=="Female"])
lmF<-lm(Numeric~Year,hunger[hunger$Sex=="Female",])
lmF<-lm(hunger$Numeric[hunger$Sex=="Female"]~hunger$Year[hunger$Sex=="Female"])
lmM<-lm(hunger$Numeric[hunger$Sex=="Male"]~hunger$Year[hunger$Sex=="Male"])
lmBoth<-lm(Numeric~Year+Sex,hunger)
summary(lmBoth)
lmInter<-lm(Numeric~Year+Sex+Year*Sex,hunger)
summary(lmInter)
fit<-lm(y~x,out2)
plot(fit,which=1)
fitno<-lm(y~x,out2[-1,])
plot(fitno,which=1)
coef(fit)-coef(fitno)
head(dfbeta(fit))
resno<-out2[1,"y"]-predict(fitno,out2[1,])
head(out2)
1-resid(fit)[1]/resno
head(hatvalues(fit))
sum(var(resid(fit)))
siqma<-sqrt(deviance(fit)/df.residual(fit))
sigma<-sqrt(deviance(fit)/df.residual(fit))
rstd<-resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd,rstandard(fit)))
plot(fit,which=3)
plot(fit,which=2)
sigma1<-sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
dy<-predict(fitno,out2)-predict(fit,no)
dy<-predict(fitno,out2)-predict(fit,out2)
sum(dy^2)/(2*sigma^2)
cooks.distance(fit)[1]
plot(fit,which = 5)
data("mtcars")
fit<-lm(mpg~factor(cyl)+wt,mtcars)
summary(fit)$coef
fit<-lm(mpg~factor(cyl),mtcars)
summary(fit)$coef
fit<-lm(mpg~factor(cyl)*wt,mtcars)
summary(fit)$coef
fit<-lm(mpg~I(wt*0.5)+factor(cyl),mtcars)
summary(fit)$coef
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
plot(x,y)
?hat
?hatvalues
f<-lm(y~x)
hatvalues(f)
dfbetas(f)
data("iris")
library(ggplot2)
names(iris)
table(iris$Species)
inTrain<- createDataPartition(y=iris$Species,p=0.7,list=FALSE)
library(ElemStatLearn)
data(ozone)
install.packages("ElemStatLearn")
data(ozone,package="ElemStatLearn")
head(ozone)
dim(ozone)
ozone<-ozone[order(ozone$ozone),]
head(ozone)
ll<-matrix(NA,nrow=10,ncol=55)
fot(i in 1:10){
for(i in 1:10){
ss<-sample(1:dim(ozone)[1],replace = T)
ozone0<-ozone[ss,]
ozone0<-ozone0[order(ozone0$ozone),]
loess0<-loess(temperature~ozone,data=ozone0,span=0.2)
ll[i,]<-predict(loess0,newdata=data.frame(ozone=1:155))
}
library(AppliedPredictiveModeling)
data("segmentationOriginal")
library(caret)
head(segmentationOriginal)
dat<-segmentationOriginal[Case="Train",]
dat<-segmentationOriginal[segmentationOriginal$Case=="Train",]
dim(segmentationOriginal)
dim(dat)
dat2<-segmentationOriginal[segmentationOriginal$Case=="Test",]
dim(dat2)
set.seed(125)
?rpart
data(Kyphosis)
names(dat)
set.seed(125)
rpart(Class~.,data=dat)
library(rpart)
rpart(Class~.,data=dat)
library(pgmm)
install.packages("pgmm")
data(olive)
library(ElemStatLearn)
data(S"SAheart")
data("SAheart")
set.seed(8484)
train<-sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSa <- SAheart[train,]
testSA<-SAheart[-train,]
set.seed(13234)
dim(trainSa)
head(trainSa)
?lm
lm(chd~alcohol+obesity+tobacco+typea+ldl,method="glm")
f<-lm(chd~alcohol+obesity+tobacco+typea+ldl,data=trainSa,method="glm")
f
missClass = function(values,prediction){sum(((prediction > 0.5)*1) != values)/length(values)}
data("vowel.train")
data("vowel.test")
dim(vowel.train)
head(vowel.train)
vowel.train$y<-as.factor(vowel.train$y)
vowel.test$y<-as.factor(vowel.test$y)
set.seed(33833)
install.packages("randomForest")
library(randomForest)
?randomForest
summary(lm(y~.,vowel.train))$coef
str(mtcars)
str(str)
str(lm)
ls
?ls
str(ls)
ls()
n
x<-rnorm(100,2,4)
summary(z)
summary(x)
str(x)
g<-gl(40,10)
f
g
str(g)
summary(g)
data("airquality")
head(airquality)
str(airquality)
s<-split(airquality,airquality$Month)
str(s)
?dnorm
pnorm(.25)
qnorm(.5987063)
x<-rnorm(10)
x
x<-rnorm(10,20,2)
X
x
summary(x)
set.seed(5)
set.seed(1)
rnorm(5)
rnorm(5)
set.seed(1)
rnorm(5)
rnorm(5)
clear
clear()
?rpois
rpois(10,1)
rpois(10,2)
rpois(10,20)
ppois(2,2)
ppois(4,2)
ppois(6,2)
set.seed(20)
x<-rnorm(100)
e<-rnorm(100,0,2)
y<-0.5+2*x+e
summary(y)
plot(x,y)
set.seed(10)
x<-rbinom(100,1,0.5)
e<-rnorm(100,0,2)
y<-0.5+2*x+e
summary(y)
plot(x,y)
set.seed(1)
rnorm(1)
rnorm()
rnorm(1)
set.seed(1)
x<-rnorm(100)
log.u <- 0.5+0.3*x
y<-rpois(100,exp(log.u))
summary(y)
plot(x,y)
rpois(100,3)
set.seed(1)
sample(1:10,4)
sample(letters,5)
sample(1:10,4)
sample(1:10)
sample(1:10)
sample(1:10,rep=T)
getwd()
fileUrl<-"https://data.baltimore.gov/api/views/dz54-2aru/rows.csv?acessType=DOWNLOAD"
download.file(fileUrl,method = "curl")
download.file(fileUrl,destfile="",method = "curl")
download.file(fileUrl,destfile="")
download.file(fileUrl,destfile=getwd())
download.file(fileUrl,destfile="C:\\Users\\lehar\\Documents")
dest<-"C:\\Users\\Lehar\\Documents"
setwd(dest)
download.file(fileUrl,destfile=dest)
if(!file.exists("./data")){dir.create("./data")}
download.file(fileUrl,destfile="./data/cameras.csv")
download.file(fileUrl,destfile="./data/cameras.csv")
fileUrl<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?acessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/cameras.csv")
download.file(fileUrl,destfile="./data/cameras.csv")
cameraData<-read.csv("./data/camera.csv")
cameraData<-read.csv("./data/cameras.csv")
head(cameraData)
dim(cameraData)
names(cameraData)
tolower(names(cameraData))
splitNames <- strsplit(names(cameraData),"\\.")
splitNames[5]
splitNames[[5]
]
splitNames[[6]
]
splitNames[[6]][1]
firstElement <- function(x){x[1]}
sapply(splitNames,firstElement)
testName <- "This_is_a_test"
sub("_","",testName)
sub("_"," ",testName)
gsub("_"," ",testName)
grep("Alameda",cameraData$intersection)
head(cameraData$intersection)
grepl("Alameda",cameraData$intersection)
table(grepl("Alameda",cameraData$intersection)
)
cameraData2<-cameraData[!grepl("Alameda"),cameraData$intersection]
cameraData2<-cameraData[!grepl("Alameda"),cameraData$intersection,]
cameraData2<-cameraData[!grepl("Alameda",cameraData$intersection),]
dim(cameraData2)
grep("Alameda",cameraData$intersection,value = T)
grep("JeffStreet",cameraData$intersection,value = T)
str_trim("Lehar Jain")
library(stringr)
str_trim("Lehar Jain")
str_trim("Lehar      Jain")
str_trim("Lehar      Jain        ")
d1 <-date()
d1
class(d1)
d2<-Sys.Date()
d2
class(d2)
library(lubridate)
dat99<-read.csv("annual_all_2012.csv")
dat12<-read.csv("annual_all_1999.csv")
head(2012)
head(dat12)
head(dat99)
dim(dat99)
dim(dat12)
names(dat99)
less annual_all_1999.csv
pm0<-read.csv("annual_all_1999.csv")
pm0<-read.csv("annual_all_1999.csv",na.strings = "")
dim(pm0)
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames<-strsplit(cnames,"|",fixed=TRUE)
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
x1<-x<0
negative<-x1<0
sum(negative,na.rm = TRUE)
mean(negative,na.rm = T)
mean(negative,na.rm = TRUE)
dates<-pm1$Date
str(dates)
dates<-as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],month)
hist(dates[negative],"month")
str(site0)
both<-intersect(site0,site1)
both
head(pm0)
cnt0<-subset(pm0,State.Code==36&country.site%in%both)
cnt0<-subset(pm0,State.Code==36&county.site%in%both)
cnt1<-subset(pm1,State.Code==36&county.site%in%both)
sapply(split(cnt0,cnt0$county.site),nrow)
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sub<-subset(cnt0,County.Code==63&Site.ID==2008)
pm1sub<-subset(cnt1,County.Code==63&Site.ID==2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0<-as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1<-as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1)
)
plot(dates0,x0sub,pch=20)
abline(h=median(x0sub),na.rm=TRUE,lwd=2)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng<-range(x0sub,x1sub,na.rm=TRUE)
rng
mn0<-with(pm0,tapply(Sample.Value,Sample.Code,mean,na.rm=TRUE))
mn0<-with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1<-with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(names(mn0),mn0)
d0<-data.frame(names(mn0),mean=mn0)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg<-merge(d0,d1,"state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,points(rep(2,52),mrg[,3]))
segment(rep(1:52),mrg[,2],rep(2:52),mrg[,3])
segments(rep(1:52),mrg[,2],rep(2:52),mrg[,3])
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x<mrg$mean.y,]
data<-read.csv("dsa.csv")
dim(data)
names(data)[123]
strsplit(names(data)[123])
?strsplit
strsplit(names(data)[123],"wgtp")
data<-read.csv("dsa.csv")
dim(data)
head(data)
setwd("Getting-And-Cleaning-Data-Week-4\\UCI HAR Dataset")
source("run_analysis.R")
write.table(new_data,file="dataset.txt",row.names = FALSE)
write.table(new_data,file="dataset.txt",row.names = TRUE)
